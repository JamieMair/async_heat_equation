# This file is part of Moden C++ exmaples 
# (https://github.com/diehlpk/modern-cpp-examples)
# Copyright (c) 2021 Patrick Diehl
# 
#  This program is free software: you can redistribute it and/or modify  
#  it under the terms of the GNU General Public License as published by  
#  the Free Software Foundation, version 3.
#
#  This program is distributed in the hope that it will be useful, but 
#  WITHOUT ANY WARRANTY; without even the implied warranty of 
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
#  General Public License for more details.
#
#  You should have received a copy of the GNU General Public License 
#  along with this program. If not, see <http://www.gnu.org/licenses/>.

version: 2
jobs:
    build:
        docker:
          - image: diehlpk/monte-carlo-codes:latest
        steps:
            - checkout
            - run: cd chapel/heat && chpl --fast heat.chpl 
            - run: cd swift/heat && swiftc -O heat_ghosts.swift
            - run: cd julia/heat && julia -O3 --threads 2 heat_ghosts.jl 2 5 1000
            - run: cd julia/heat && julia -O3 --threads 2 heat_ghosts.jl 2 5 1000
            - run: cd cxx/heat && g++ -o heat_ghosts -O3 -std=c++17 heat_ghosts.cxx -pthread
            - run: cd rust/monte && cargo build --release
            - run: cd rust/heat && cargo build --release
            - run: cd rust/heat_simd && cargo build --release
            - run: cd python/heat && python -c "import ast; ast.parse(open('heat_ghosts.py').read())"
            - run: cd python/heat && python -c "import ast; ast.parse(open('heat.py').read())"
            - run: cd go/heat  && go build main.go
            - run: cd hpx/heat && cmake . && make
    build_image:
          filters:
            branches:
              only:
                - docker
          machine:
            image: ubuntu-2004:202111-02
          environment:
            IMAGE_FOLDER_NAME: Docker
            IMAGE_NAME: diehlpk/monte-carlo-codes:latest 
          steps:
            - checkout
            - run:
                name: Building Docker Image
                command: |
                    docker build --network host -t ${IMAGE_NAME} ${IMAGE_FOLDER_NAME}
                    docker images
            - deploy:
                command: |
                        docker login -u "$DOCKER_USER" -u "$DOCKER_PASS"
                        docker push ${IMAGE_NAME}


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - build_image
